{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAAM,EAAY,AADJ,SAAS,aAAa,CAAC,SACb,OAAO,CAAC,EAAE,CAC5B,EAAQ,EAAG,EAAU,IAAI,EACzB,EAAa,SAAS,gBAAgB,CAAC,YAEvC,EAAO,SAAS,aAAa,CAAC,OAUpC,CAAA,EAAK,SAAS,CAAI,iTAQ4D,MAAA,CAA1E,AAjBW,CACb,QACA,YACA,SACA,WACA,YACA,gBACD,CAUU,GAAG,CAAC,SAAC,CARhB,EAQyB,MAAC,kBAA0B,MAAA,CAAT,EAAK,MAAS,MAAA,CAAL,EAAK,YAAY,GAAA,IAAI,CAAC,IAAI,uQAU9E,EAAK,SAAS,CAAC,GAAG,CAAC,qBACnB,EAAK,YAAY,CAAC,aAAc,cAEhC,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,SAAS,CAAC,GAAG,CAAC,gBAC3B,EAAa,YAAY,CAAC,UAAW,gBAErC,SAAS,IAAI,CAAC,MAAM,CAAC,GAErB,IAAM,EAAgB,SAAC,CAAvB,EACE,MAAO,CAAC,EAAO,OAAO,CAAC,MAAO,GAChC,EAEA,SAAS,IACP,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,gBAAgB,CAAC,QAAS,WAC5B,EAAK,OAAO,CAAC,SAAC,CAAd,EAAqB,OAAA,EAAG,SAAS,CAAC,MAAM,CAAC,S,GACzC,EAAI,SAAS,CAAC,GAAG,CAAC,SACpB,EACF,EACF,CAEA,SAAS,EAAe,CAAC,EACvB,EAAE,cAAc,GAEhB,IAkDM,EACA,EAaA,EAhEA,EAAiB,EAAG,EAAK,gBAAgB,CAAC,aAE/C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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tableBody = table.tBodies[0];\nvar rows = _to_consumable_array(tableBody.rows);\nvar tHeadCells = document.querySelectorAll(\"thead th\");\nvar form = document.createElement(\"form\");\nvar cities = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nform.innerHTML = '\\n\t<label>Name: <input name=\"name\" type=\"text\" minlength=\"4\" pattern=\"\\\\S.{3,}\" required data-qa=\"name\"></label>\\n\\n\t<label>Position: <input name=\"position\" type=\"text\" pattern=\"\\\\S.{3,}\" required data-qa=\"position\"></label>\\n\\n\t<label>\\n\tOffice: \\n\t<select name=\"office\" data-qa=\"office\" required>\\n\t\t'.concat(cities.map(function(city) {\n    return '<option value=\"'.concat(city, '\">').concat(city, \"</option>\");\n}).join(\"\"), '\\n\t</select>\\n\t</label>\\n\\n\t<label>Age: <input name=\"age\" type=\"number\" min=\"18\" max=\"90\" required data-qa=\"age\"></label>\\n\\n\t<label>Salary: <input name=\"salary\" type=\"number\" required data-qa=\"salary\"></label>\\n\\n\t<button type=\"submit\">Save to table</button>');\nform.classList.add(\"new-employee-form\");\nform.setAttribute(\"novalidate\", \"novalidate\");\nvar notification = document.createElement(\"div\");\nnotification.classList.add(\"notification\");\nnotification.setAttribute(\"data-qa\", \"notification\");\ndocument.body.append(form);\nvar stringToDigit = function(string) {\n    return +string.replace(/\\D/g, \"\");\n};\nfunction addActiv() {\n    rows.forEach(function(row) {\n        row.addEventListener(\"click\", function() {\n            rows.forEach(function(el) {\n                return el.classList.remove(\"active\");\n            });\n            row.classList.add(\"active\");\n        });\n    });\n}\nfunction validationForm(e) {\n    e.preventDefault();\n    var invalidFields = _to_consumable_array(form.querySelectorAll(\":invalid\"));\n    _to_consumable_array(form.elements).forEach(function(field) {\n        if (field.checkValidity()) {\n            field.style.border = \"\";\n            field.style.backgroundColor = \"\";\n        }\n    });\n    if (form.checkValidity()) {\n        notification.classList.remove(\"error\");\n        notification.classList.add(\"success\");\n        notification.innerText = \"The employee is added to the table\";\n        notification.style.display = \"\";\n        document.body.prepend(notification);\n        addEmployee();\n    } else notification.textContent = \"\";\n    invalidFields.forEach(function(field) {\n        if (!field.checkValidity()) {\n            notification.classList.remove(\"success\");\n            notification.classList.add(\"error\");\n            notification.style.display = \"\";\n            document.body.prepend(notification);\n            field.style.border = \"2px solid red\";\n            field.style.backgroundColor = \"#ffe6e6\";\n            if (field.validity.patternMismatch) notification.textContent = \"This field cannot be just spaces\";\n            else if (field.validity.valueMissing) notification.textContent = \"Fill in this field\";\n            else if (field.validity.tooShort) notification.textContent = \"Text must be at least 4 characters long (you entered \".concat(field.value.length, \" characters)\");\n            else if (field.validity.rangeUnderflow) notification.textContent = \"Value must be greater than or equal to 18\";\n            else if (field.validity.rangeOverflow) notification.textContent = \"The value must be less than or equal to 90\";\n        }\n    });\n    setTimeout(function() {\n        notification.style.display = \"none\";\n    }, 2000);\n}\nfunction addEmployee() {\n    var formData = new FormData(form);\n    var formDataArr = [];\n    formData.forEach(function(value, key) {\n        if (key === \"salary\") {\n            var dataValue = +value;\n            var formatedValue = \"$\" + dataValue.toLocaleString(\"en-US\");\n            formDataArr.push(formatedValue);\n        } else formDataArr.push(value);\n    });\n    var newRow = tableBody.insertRow();\n    formDataArr.forEach(function(el) {\n        newRow.insertCell().textContent = el;\n    });\n    rows.push(newRow);\n    addActiv();\n    form.reset();\n}\nfunction editingCells() {\n    var tableCells = _to_consumable_array(tableBody.querySelectorAll(\"td\"));\n    tableCells.forEach(function(cell) {\n        cell.addEventListener(\"dblclick\", function(e) {\n            var activeInput = document.querySelector(\".cell-input\");\n            if (activeInput) {\n                var activeCell = activeInput.parentElement;\n                activeCell.textContent = activeInput.value.trim() || activeInput.dataset.prevVal;\n                activeInput.remove();\n            }\n            var prevContent = cell.textContent;\n            cell.textContent = \"\";\n            var input = document.createElement(\"input\");\n            input.classList.add(\"cell-input\");\n            input.value = prevContent;\n            input.setAttribute(\"data-prev-val\", prevContent);\n            cell.append(input);\n            input.focus();\n            //   cell.setAttribute('contenteditable', 'true');\n            //   cell.focus();\n            input.addEventListener(\"blur\", function() {\n                cell.textContent = input.value.trim() || prevContent;\n                input.remove();\n            // cell.removeAttribute('contenteditable');\n            });\n            input.addEventListener(\"keyup\", function(keyboard) {\n                if (keyboard.key === \"Enter\") input.blur();\n            });\n        });\n    });\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    addActiv();\n    var asc = true;\n    var prevIndecs;\n    tHeadCells.forEach(function(cell, i) {\n        cell.addEventListener(\"click\", function() {\n            var _tableBody;\n            if (prevIndecs !== i) asc = true;\n            var sortBy = asc ? 1 : -1;\n            var sortedRows = rows.sort(function(a, b) {\n                var contentsA = a.cells[i].textContent;\n                var contentsB = b.cells[i].textContent;\n                if (i === 4) return (stringToDigit(contentsA) - stringToDigit(contentsB)) * sortBy;\n                return contentsA.localeCompare(contentsB) * sortBy;\n            });\n            prevIndecs = i;\n            asc = !asc;\n            (_tableBody = tableBody).append.apply(_tableBody, _to_consumable_array(sortedRows));\n        });\n    });\n    form.addEventListener(\"submit\", validationForm);\n    editingCells();\n});\n\n//# sourceMappingURL=index.328edbb0.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tableBody = table.tBodies[0];\nconst rows = [...tableBody.rows];\nconst tHeadCells = document.querySelectorAll('thead th');\n\nconst form = document.createElement('form');\nconst cities = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nform.innerHTML = `\n\t<label>Name: <input name=\"name\" type=\"text\" minlength=\"4\" pattern=\"\\\\S.{3,}\" required data-qa=\"name\"></label>\n\n\t<label>Position: <input name=\"position\" type=\"text\" pattern=\"\\\\S.{3,}\" required data-qa=\"position\"></label>\n\n\t<label>\n\tOffice: \n\t<select name=\"office\" data-qa=\"office\" required>\n\t\t${cities.map((city) => `<option value=\"${city}\">${city}</option>`).join('')}\n\t</select>\n\t</label>\n\n\t<label>Age: <input name=\"age\" type=\"number\" min=\"18\" max=\"90\" required data-qa=\"age\"></label>\n\n\t<label>Salary: <input name=\"salary\" type=\"number\" required data-qa=\"salary\"></label>\n\n\t<button type=\"submit\">Save to table</button>`;\n\nform.classList.add('new-employee-form');\nform.setAttribute('novalidate', 'novalidate');\n\nconst notification = document.createElement('div');\n\nnotification.classList.add('notification');\nnotification.setAttribute('data-qa', 'notification');\n\ndocument.body.append(form);\n\nconst stringToDigit = (string) => {\n  return +string.replace(/\\D/g, '');\n};\n\nfunction addActiv() {\n  rows.forEach((row) => {\n    row.addEventListener('click', () => {\n      rows.forEach((el) => el.classList.remove('active'));\n      row.classList.add('active');\n    });\n  });\n}\n\nfunction validationForm(e) {\n  e.preventDefault();\n\n  const invalidFields = [...form.querySelectorAll(':invalid')];\n\n  [...form.elements].forEach((field) => {\n    if (field.checkValidity()) {\n      field.style.border = '';\n      field.style.backgroundColor = '';\n    }\n  });\n\n  if (form.checkValidity()) {\n    notification.classList.remove('error');\n    notification.classList.add('success');\n    notification.innerText = 'The employee is added to the table';\n    notification.style.display = '';\n    document.body.prepend(notification);\n    addEmployee();\n  } else {\n    notification.textContent = '';\n  }\n\n  invalidFields.forEach((field) => {\n    if (!field.checkValidity()) {\n      notification.classList.remove('success');\n      notification.classList.add('error');\n      notification.style.display = '';\n      document.body.prepend(notification);\n\n      field.style.border = '2px solid red';\n      field.style.backgroundColor = '#ffe6e6';\n\n      if (field.validity.patternMismatch) {\n        notification.textContent = 'This field cannot be just spaces';\n      } else if (field.validity.valueMissing) {\n        notification.textContent = 'Fill in this field';\n      } else if (field.validity.tooShort) {\n        notification.textContent = `Text must be at least 4 characters long (you entered ${field.value.length} characters)`;\n      } else if (field.validity.rangeUnderflow) {\n        notification.textContent = 'Value must be greater than or equal to 18';\n      } else if (field.validity.rangeOverflow) {\n        notification.textContent = 'The value must be less than or equal to 90';\n      }\n    }\n  });\n\n  setTimeout(() => {\n    notification.style.display = 'none';\n  }, 2000);\n}\n\nfunction addEmployee() {\n  const formData = new FormData(form);\n  const formDataArr = [];\n\n  formData.forEach((value, key) => {\n    if (key === 'salary') {\n      const dataValue = +value;\n      const formatedValue = '$' + dataValue.toLocaleString('en-US');\n\n      formDataArr.push(formatedValue);\n    } else {\n      formDataArr.push(value);\n    }\n  });\n\n  const newRow = tableBody.insertRow();\n\n  formDataArr.forEach((el) => {\n    newRow.insertCell().textContent = el;\n  });\n\n  rows.push(newRow);\n\n  addActiv();\n\n  form.reset();\n}\n\nfunction editingCells() {\n  const tableCells = [...tableBody.querySelectorAll('td')];\n\n  tableCells.forEach((cell) => {\n    cell.addEventListener('dblclick', (e) => {\n      const activeInput = document.querySelector('.cell-input');\n\n      if (activeInput) {\n        const activeCell = activeInput.parentElement;\n\n        activeCell.textContent =\n          activeInput.value.trim() || activeInput.dataset.prevVal;\n        activeInput.remove();\n      }\n\n      const prevContent = cell.textContent;\n\n      cell.textContent = '';\n\n      const input = document.createElement('input');\n\n      input.classList.add('cell-input');\n      input.value = prevContent;\n      input.setAttribute('data-prev-val', prevContent);\n      cell.append(input);\n      input.focus();\n\n      //   cell.setAttribute('contenteditable', 'true');\n      //   cell.focus();\n\n      input.addEventListener('blur', () => {\n        cell.textContent = input.value.trim() || prevContent;\n        input.remove();\n\n        // cell.removeAttribute('contenteditable');\n      });\n\n      input.addEventListener('keyup', (keyboard) => {\n        if (keyboard.key === 'Enter') {\n          input.blur();\n\n          //   cell.blur();\n        }\n      });\n    });\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  addActiv();\n\n  let asc = true;\n  let prevIndecs;\n\n  tHeadCells.forEach((cell, i) => {\n    cell.addEventListener('click', () => {\n      if (prevIndecs !== i) {\n        asc = true;\n      }\n\n      const sortBy = asc ? 1 : -1;\n\n      const sortedRows = rows.sort((a, b) => {\n        const contentsA = a.cells[i].textContent;\n        const contentsB = b.cells[i].textContent;\n\n        if (i === 4) {\n          return (stringToDigit(contentsA) - stringToDigit(contentsB)) * sortBy;\n        }\n\n        return contentsA.localeCompare(contentsB) * sortBy;\n      });\n\n      prevIndecs = i;\n      asc = !asc;\n\n      tableBody.append(...sortedRows);\n    });\n  });\n\n  form.addEventListener('submit', validationForm);\n\n  editingCells();\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tableBody","table","document","querySelector","tBodies","rows","tHeadCells","querySelectorAll","form","createElement","innerHTML","concat","cities","map","city","join","classList","add","setAttribute","notification","body","append","stringToDigit","string","replace","addActiv","forEach","row","addEventListener","el","remove","validationForm","e","preventDefault","formData","formDataArr","newRow","invalidFields","elements","field","checkValidity","style","border","backgroundColor","innerText","display","prepend","FormData","value","key","formatedValue","dataValue","toLocaleString","push","insertRow","insertCell","textContent","reset","validity","patternMismatch","valueMissing","tooShort","rangeUnderflow","rangeOverflow","setTimeout","prevIndecs","asc","cell","sortBy","sortedRows","sort","a","b","contentsA","cells","contentsB","localeCompare","apply","tableCells","activeInput","activeCell","parentElement","trim","dataset","prevVal","prevContent","input","focus","keyboard","blur"],"version":3,"file":"index.328edbb0.js.map"}